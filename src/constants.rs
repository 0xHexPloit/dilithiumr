use crate::algebra::poly::Polynomial;
use crate::algebra::vec::PolyVec;

pub const Q: u32 = 8380417; // 2**23 - 2**13 + 1;
pub const Q_INVERSE: i32 = 58728449; // Q^(-1) mod 2**32 <- T
pub const D: u8 = 13; // Dropped bits from t

pub const ZETA_BYTES: usize = 32;

pub const SEED_BYTES: usize = 128;
pub const RHO_BYTES: usize = 32;

pub const RHO_PRIME_BYTES: usize = 64;

pub const TR_BYTES: usize = 32;

pub const BIG_K_BYTES: usize = 32;

pub const MU_BYTES: usize = 64;

pub const C_TILDE_BYTES: usize = 32;

pub const N: usize = 256; // Ring degree

pub const POLY_T0_PACKED_BYTES: usize = 416;
pub const POLY_T1_PACKED_BYTES: usize = 320;

const SHAKE128_RATE: usize = 168;
pub const STREAM128_BLOCKBYTES: usize = SHAKE128_RATE;

pub const SHAKE256_RATE: usize = 132;
pub const STREAM256_BLOCKBYTES: usize = SHAKE256_RATE;

const REJ_UNIFORM_NBLOCKS: usize = (768 + STREAM128_BLOCKBYTES - 1) / STREAM128_BLOCKBYTES;
pub const REJ_UNIFORM_BUFLEN: usize = REJ_UNIFORM_NBLOCKS * STREAM128_BLOCKBYTES;

const POLY_UNIFORM_ETA_2_NB_BLOCKS: usize = (136 + STREAM128_BLOCKBYTES - 1) / STREAM128_BLOCKBYTES;
const POLY_UNIFORM_ETA_4_NB_BLOCKS: usize = (227 + STREAM128_BLOCKBYTES - 1) / STREAM128_BLOCKBYTES;

pub const POLY_UNIFORM_ETA_2_BUFLEN: usize = POLY_UNIFORM_ETA_2_NB_BLOCKS * STREAM256_BLOCKBYTES;
pub const POLY_UNIFORM_ETA_4_BUFLEN: usize = POLY_UNIFORM_ETA_4_NB_BLOCKS * STREAM256_BLOCKBYTES;

pub const ZETAS: [i32; 256] = [
    0, 25847, -2608894, -518909, 237124, -777960, -876248, 466468, 1826347, 2353451, -359251,
    -2091905, 3119733, -2884855, 3111497, 2680103, 2725464, 1024112, -1079900, 3585928, -549488,
    -1119584, 2619752, -2108549, -2118186, -3859737, -1399561, -3277672, 1757237, -19422, 4010497,
    280005, 2706023, 95776, 3077325, 3530437, -1661693, -3592148, -2537516, 3915439, -3861115,
    -3043716, 3574422, -2867647, 3539968, -300467, 2348700, -539299, -1699267, -1643818, 3505694,
    -3821735, 3507263, -2140649, -1600420, 3699596, 811944, 531354, 954230, 3881043, 3900724,
    -2556880, 2071892, -2797779, -3930395, -1528703, -3677745, -3041255, -1452451, 3475950,
    2176455, -1585221, -1257611, 1939314, -4083598, -1000202, -3190144, -3157330, -3632928, 126922,
    3412210, -983419, 2147896, 2715295, -2967645, -3693493, -411027, -2477047, -671102, -1228525,
    -22981, -1308169, -381987, 1349076, 1852771, -1430430, -3343383, 264944, 508951, 3097992,
    44288, -1100098, 904516, 3958618, -3724342, -8578, 1653064, -3249728, 2389356, -210977, 759969,
    -1316856, 189548, -3553272, 3159746, -1851402, -2409325, -177440, 1315589, 1341330, 1285669,
    -1584928, -812732, -1439742, -3019102, -3881060, -3628969, 3839961, 2091667, 3407706, 2316500,
    3817976, -3342478, 2244091, -2446433, -3562462, 266997, 2434439, -1235728, 3513181, -3520352,
    -3759364, -1197226, -3193378, 900702, 1859098, 909542, 819034, 495491, -1613174, -43260,
    -522500, -655327, -3122442, 2031748, 3207046, -3556995, -525098, -768622, -3595838, 342297,
    286988, -2437823, 4108315, 3437287, -3342277, 1735879, 203044, 2842341, 2691481, -2590150,
    1265009, 4055324, 1247620, 2486353, 1595974, -3767016, 1250494, 2635921, -3548272, -2994039,
    1869119, 1903435, -1050970, -1333058, 1237275, -3318210, -1430225, -451100, 1312455, 3306115,
    -1962642, -1279661, 1917081, -2546312, -1374803, 1500165, 777191, 2235880, 3406031, -542412,
    -2831860, -1671176, -1846953, -2584293, -3724270, 594136, -3776993, -2013608, 2432395, 2454455,
    -164721, 1957272, 3369112, 185531, -1207385, -3183426, 162844, 1616392, 3014001, 810149,
    1652634, -3694233, -1799107, -3038916, 3523897, 3866901, 269760, 2213111, -975884, 1717735,
    472078, -426683, 1723600, -1803090, 1910376, -1667432, -1104333, -260646, -3833893, -2939036,
    -2235985, -420899, -2286327, 183443, -976891, 1612842, -3545687, -554416, 3919660, -48306,
    -1362209, 3937738, 1400424, -846154, 1976782,
];

pub const fn get_eta_poly_eta_bytes(eta: usize) -> usize {
    if eta == 2 {
        96
    } else {
        128
    }
}

pub const fn get_poly_w1_packed_bytes(gamma: usize) -> usize {
    if gamma == ((Q - 1) / 88) as usize {
        192
    } else {
        128
    }
}


#[cfg(test)]
pub const H_TEST: PolyVec<4> = PolyVec::<4> {
    data: [
        Polynomial { coefficients: [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0]},
        Polynomial {coefficients: [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]},
        Polynomial { coefficients: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0]},
        Polynomial {coefficients: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]}
    ]
};

#[cfg(test)]
pub const W_ONE_TEST: PolyVec<4> = PolyVec::<4> {
    data: [
        Polynomial {coefficients: [23, 32, 37, 5, 41, 11, 28, 42, 29, 21, 23, 19, 40, 22, 32, 41, 4, 40, 21, 37, 2, 40, 41, 30, 40, 28, 18, 8, 19, 13, 9, 16, 41, 17, 9, 31, 28, 2, 11, 43, 29, 27, 31, 20, 12, 1, 40, 6, 42, 9, 19, 41, 37, 41, 25, 24, 10, 33, 38, 4, 36, 32, 7, 40, 23, 27, 38, 8, 5, 19, 38, 35, 36, 15, 33, 27, 14, 25, 8, 11, 10, 7, 21, 8, 27, 4, 6, 5, 15, 39, 6, 27, 5, 25, 37, 25, 26, 43, 38, 18, 43, 31, 33, 9, 7, 18, 34, 34, 18, 24, 30, 23, 30, 36, 24, 36, 8, 1, 37, 7, 12, 33, 12, 29, 11, 14, 31, 35, 41, 7, 23, 34, 17, 22, 16, 1, 8, 31, 0, 8, 8, 14, 35, 10, 1, 23, 19, 29, 26, 2, 41, 32, 0, 17, 11, 9, 4, 20, 2, 38, 15, 8, 14, 22, 34, 4, 34, 15, 39, 13, 42, 0, 16, 18, 1, 13, 2, 37, 21, 40, 33, 40, 25, 28, 5, 10, 35, 15, 41, 40, 18, 19, 14, 2, 26, 27, 30, 21, 1, 36, 3, 28, 16, 15, 40, 0, 9, 18, 39, 9, 19, 1, 31, 35, 32, 18, 32, 25, 2, 0, 41, 34, 41, 3, 31, 12, 0, 16, 24, 5, 17, 34, 29, 5, 27, 38, 43, 40, 1, 35, 22, 7, 21, 20, 0, 26, 18, 0, 32, 41, 24, 43, 30, 3, 11, 4]},
        Polynomial {coefficients: [2, 38, 28, 16, 1, 30, 9, 11, 41, 37, 35, 24, 28, 10, 16, 21, 4, 39, 8, 39, 2, 33, 12, 23, 34, 23, 14, 1, 23, 24, 24, 19, 29, 29, 42, 2, 15, 0, 30, 6, 7, 31, 0, 42, 39, 25, 41, 39, 25, 29, 4, 0, 33, 14, 32, 34, 21, 23, 11, 19, 25, 37, 30, 28, 24, 15, 31, 39, 24, 19, 24, 41, 25, 9, 43, 37, 7, 16, 3, 1, 32, 7, 17, 10, 5, 31, 23, 14, 42, 20, 19, 35, 26, 5, 36, 6, 3, 36, 32, 4, 29, 30, 30, 36, 8, 4, 8, 1, 39, 5, 0, 22, 20, 7, 17, 31, 42, 14, 24, 30, 31, 0, 31, 27, 35, 5, 12, 42, 12, 18, 20, 20, 31, 26, 16, 35, 4, 4, 29, 10, 31, 24, 40, 20, 18, 5, 21, 22, 31, 30, 1, 21, 38, 10, 19, 6, 19, 3, 17, 36, 26, 8, 4, 31, 34, 33, 15, 3, 31, 38, 23, 28, 24, 4, 40, 37, 12, 9, 12, 40, 40, 11, 4, 17, 2, 12, 38, 14, 28, 40, 35, 22, 39, 1, 16, 1, 1, 34, 43, 39, 39, 6, 36, 25, 39, 37, 40, 37, 33, 30, 29, 0, 38, 17, 13, 6, 15, 1, 18, 9, 11, 6, 27, 13, 21, 29, 12, 35, 36, 1, 7, 27, 14, 12, 14, 31, 39, 4, 27, 14, 22, 34, 21, 22, 41, 27, 39, 28, 5, 15, 27, 10, 11, 34, 8, 29] },
        Polynomial {coefficients: [40, 27, 23, 36, 19, 10, 34, 27, 34, 36, 9, 40, 13, 7, 2, 40, 39, 22, 40, 10, 5, 11, 1, 40, 28, 5, 32, 36, 10, 30, 13, 27, 14, 9, 24, 42, 25, 8, 15, 5, 42, 14, 42, 17, 31, 24, 13, 3, 21, 36, 16, 3, 40, 4, 25, 32, 4, 30, 15, 14, 37, 21, 30, 12, 4, 40, 8, 1, 37, 5, 14, 33, 15, 39, 40, 38, 6, 1, 40, 0, 41, 7, 6, 36, 13, 31, 5, 32, 33, 33, 41, 20, 22, 31, 41, 7, 32, 6, 16, 32, 32, 27, 25, 0, 16, 35, 10, 18, 11, 14, 24, 32, 23, 32, 24, 41, 0, 7, 25, 5, 36, 25, 37, 41, 13, 9, 15, 22, 43, 36, 15, 32, 19, 10, 14, 16, 34, 27, 2, 38, 13, 42, 2, 3, 12, 2, 38, 41, 20, 20, 43, 31, 36, 18, 15, 0, 28, 24, 3, 38, 29, 19, 16, 27, 8, 23, 9, 13, 2, 43, 9, 12, 42, 38, 23, 41, 37, 2, 7, 17, 40, 21, 27, 40, 10, 17, 18, 24, 23, 18, 5, 2, 17, 33, 26, 2, 19, 19, 37, 11, 7, 0, 10, 15, 6, 43, 30, 13, 12, 26, 42, 41, 3, 17, 34, 20, 11, 15, 25, 27, 12, 2, 36, 20, 14, 10, 12, 42, 29, 20, 16, 12, 24, 39, 32, 15, 16, 28, 40, 32, 6, 4, 40, 20, 27, 9, 23, 12, 5, 16, 7, 41, 38, 25, 0, 26]},
        Polynomial {coefficients: [10, 1, 35, 28, 0, 10, 33, 11, 10, 20, 30, 21, 1, 22, 9, 18, 16, 27, 28, 35, 27, 26, 29, 12, 1, 1, 0, 8, 12, 21, 1, 21, 8, 42, 21, 19, 36, 31, 33, 29, 9, 38, 21, 36, 14, 7, 34, 40, 22, 33, 13, 35, 39, 42, 30, 10, 34, 37, 31, 41, 24, 24, 5, 4, 2, 37, 42, 43, 2, 37, 35, 3, 29, 7, 34, 40, 25, 9, 0, 17, 14, 33, 28, 4, 12, 6, 8, 28, 36, 18, 24, 24, 20, 20, 39, 32, 18, 35, 4, 28, 21, 37, 8, 3, 14, 26, 26, 9, 26, 30, 13, 23, 43, 43, 35, 4, 2, 10, 12, 21, 0, 32, 39, 36, 28, 34, 11, 3, 4, 39, 13, 41, 5, 39, 34, 30, 22, 2, 3, 16, 29, 39, 40, 27, 8, 5, 42, 7, 34, 16, 42, 38, 17, 22, 39, 34, 34, 17, 7, 35, 5, 27, 20, 39, 32, 38, 7, 23, 24, 27, 16, 41, 22, 4, 22, 14, 38, 10, 27, 31, 23, 20, 37, 6, 31, 2, 35, 14, 33, 33, 17, 12, 38, 18, 15, 36, 22, 3, 7, 8, 16, 23, 10, 20, 43, 43, 11, 21, 42, 39, 7, 37, 30, 38, 23, 2, 2, 27, 8, 7, 20, 8, 13, 4, 39, 24, 42, 27, 43, 26, 31, 34, 14, 37, 41, 30, 36, 23, 43, 0, 23, 20, 28, 15, 36, 6, 24, 2, 39, 6, 28, 15, 36, 12, 23, 35]}
    ]
};

